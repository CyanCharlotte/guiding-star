map $cookie_auth_token $user_hash {
    "" $remote_addr;
    default $cookie_auth_token;
}

upstream guiding_star_backend {
    # requests from the same user always map to the same backend worker.
    # this avoids some rare ux glitches if worker sync is slower than user's request.
    # e.g. the user updates the profile but still gets the profile incomplete warning
    # in case the subsequent request is proxied to another worker which is not yet synchronized.
    hash $user_hash;

    server 127.0.0.1:8010;
    server 127.0.0.1:8011;
    server 127.0.0.1:8012;
    server 127.0.0.1:8013;
}

upstream guiding_star_admin {
    server 127.0.0.1:5000;
}

server {
    listen 443 ssl http2;
    server_name guiding-star.example.com;

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/javascript application/json;

    location /service/ws {
        proxy_pass http://guiding_star_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    location /service {
        proxy_pass http://guiding_star_backend;
        proxy_http_version 1.1;
        client_max_body_size 11M; # change it based on the max writeup size
        add_header Cache-Control "no-cache";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    location /manage {
        proxy_pass http://guiding_star_admin;
        proxy_http_version 1.1;
        
        if ($cookie_admin_2fa != 'some_long_random_string') { # as ADMIN_2FA_COOKIE in backend/src/secret.py
            return 418;
        }
    }
    
    location /media/ {
        alias /path/to/media/;
        expires 180s;
        add_header Cache-Control "public";
    }
    
    location /_internal_attachments/ {
        internal;
        alias /path/to/attachments/;
        add_header Cache-Control "no-cache";
        add_header Content-Disposition "attachment";
        add_header Last-Modified "";
        if_modified_since off;
    }
    
    location / {
        root /path/to/frontend/build/;
        index index.html;
        add_header Cache-Control "no-cache";

        location /static {
            expires 7d;
            add_header Cache-Control "public";
        }
    }
    
    # other ssl parameters ...
}

server {
    listen 80;
    server_name guiding-star.example.com;

    return 301 https://$host$request_uri;
}
